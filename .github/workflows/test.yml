name: winget-pkgs test
on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - .gitignore
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test-links:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Set up python packages
        uses: actions/setup-python@2e3e4b15a884dc73a63f962bff250a855150a234
        with:
          python-version: '3.13'
          check-latest: true
          update-environment: true
          pip-install: requests pyyaml

      - name: Detect changed folder
        id: detect
        shell: pwsh
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          $changed = git diff --name-only ${{ github.event.before }} ${{ github.sha }}
          $manifestsChanged = $changed | Where-Object { $_ -like "manifests/*" }
          $itselfChanged = $changed | Where-Object { $_ -like "*test.yml" }

          if (-not $manifestsChanged) {
            Write-Host "No manifest changes detected"
            if ($env:GITHUB_EVENT_NAME -eq "workflow_dispatch" -or $itselfChanged) {
              $folder = "manifests"
            } else {
              $folder = ""
            }
          } else {
            # Extract the top-level changed folder under manifests/
            $folder = $manifestsChanged | ForEach-Object { Split-Path $_ -Parent } | Sort-Object -Unique
            Write-Host "Folder changed under manifests: $folder"
          }
      
          echo "folder=$folder" >> $env:GITHUB_OUTPUT

      - name: Run python scripts
        if: steps.detect.outputs.folder != ''
        shell: pwsh
        run: |
          python3 .\Tools\TestLinks.py ${{ steps.detect.outputs.folder }}

  test-install:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Set up python packages
        uses: actions/setup-python@2e3e4b15a884dc73a63f962bff250a855150a234
        with:
          python-version: '3.13'
          check-latest: true
          update-environment: true
          pip-install: requests pyyaml

      - name: Set up winget
        shell: pwsh
        run: |
          function Get-ReleaseTag {
            $releasesAPIResponse = Invoke-RestMethod 'https://api.github.com/repos/microsoft/winget-cli/releases?per_page=100' -Verbose
            if (!$script:Prerelease) {
              $releasesAPIResponse = $releasesAPIResponse.Where({ !$_.prerelease })
            }
            if (![String]::IsNullOrWhiteSpace($script:WinGetVersion)) {
              $releasesAPIResponse = @($releasesAPIResponse.Where({ $_.tag_name -match $('^v?' + [regex]::escape($script:WinGetVersion)) }))
            }
            if ($releasesAPIResponse.Count -lt 1) {
              Write-Output 'No WinGet releases found matching criteria'
              exit 1
            }
            $releasesAPIResponse = $releasesAPIResponse | Sort-Object -Property published_at -Descending
            return $releasesAPIResponse[0].tag_name
          }
          
          Install-Module -Name Microsoft.WinGet.Client -Force -Repository PSGallery -Verbose -AllowClobber
          try {
            Repair-WinGetPackageManager -Version $(Get-ReleaseTag) -Force -Verbose
          } catch {
            Write-Warning "Repair failed: $($_.Exception.Message)"
            if ($_.Exception.Message -match '0x80073D02') {
              if ($_.Exception.Message -match 'ActivityId\]\s+([0-9a-fA-F-]+)') {
                $activityId = $matches[1]
                Write-Host "Found ActivityId: $activityId"
                try {
                  Write-Host "Retrieving AppX logs..."
                  Get-AppPackageLog -ActivityId $activityId | Format0List
                } catch {
                  Write-Warning "Could not retrieve AppX log for $activityId"
                }
              }
            }
            throw $_.Exception
          }
          winget --info
          winget source remove msstore

      - name: Detect changed folder
        id: detect
        shell: pwsh
        run: |
          git fetch origin ${{ github.event.before }} --depth=1
          $changed = git diff --name-only ${{ github.event.before }} ${{ github.sha }}
          $manifestsChanged = $changed | Where-Object { $_ -like "manifests/*" }
          $itselfChanged = $changed | Where-Object { $_ -like "*test.yml" }

          if (-not $manifestsChanged) {
            Write-Host "No manifest changes detected"
            $folder = ""
          } else {
            # Extract the top-level changed folder under manifests/
            $folder = $manifestsChanged | ForEach-Object { Split-Path $_ -Parent } | Sort-Object -Unique
            Write-Host "Folder changed under manifests: $folder"
          }
      
          echo "folder=$folder" >> $env:GITHUB_OUTPUT

      - name: Run python scripts
        if: steps.detect.outputs.folder != ''
        shell: pwsh
        run: |
          python3 .\Tools\TestInstall.py ${{ steps.detect.outputs.folder }}

